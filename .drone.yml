kind: pipeline
type: docker
name: default

clone:
  depth: 1

platform:
  os: linux
  arch: arm64

# 如果你的 runner 有节点选择需求，这里可以保留；Drone 新版本里 node 选择常用的是 "node" labels。
node:
  cloud: oracle
  location: tokyo

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: gomodcache
    host:
      path: /var/docker/drone-runner/cache/gomod

steps:
  - name: build-docker
    image: docker:dind
    when:
      event:
        - tag
    environment:
      password:
        from_secret: registry-password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: gomodcache
        path: /go/pkg/mod
    commands:
      - |
        set -e
        echo "[STEP] Show docker versions"
        docker version
        docker buildx version || true

        echo "[STEP] Login registry"
        docker login --username=cloverzrg -p "$password"

        # 如需确保多架构（如果镜像里还没安装 binfmt），取消下一行注释：
        # docker run --privileged --rm tonistiigi/binfmt --install arm64,amd64,386

        echo "[STEP] Create buildx builder"
        build_node=$(docker buildx create --use)
        echo "build node: $build_node"

        echo "[STEP] Build frps"
        docker buildx build \
          --platform linux/arm64,linux/amd64,linux/386 \
          -t cloverzrg/frps-docker:${DRONE_TAG} \
          -t cloverzrg/frps-docker:latest \
          --push \
          --build-arg DRONE_TAG=${DRONE_TAG} \
          .

        echo "[STEP] Build frpc"
        docker buildx build \
          -f Dockerfile.frpc \
          --platform linux/arm64,linux/amd64,linux/386 \
          -t cloverzrg/frpc-docker:${DRONE_TAG} \
          -t cloverzrg/frpc-docker:latest \
          --push \
          --build-arg DRONE_TAG=${DRONE_TAG} \
          .

        echo "[STEP] Cleanup builder"
        docker buildx rm "$build_node" || true

  - name: build-docker-master
    image: docker:dind
    when:
      event:
        - push
      branch:
        - master
    environment:
      password:
        from_secret: registry-password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: gomodcache
        path: /go/pkg/mod
    commands:
      - |
        set -e
        DRONE_TAG=master
        echo "[STEP] Show docker versions"
        docker version
        docker buildx version || true

        echo "[STEP] Login registry"
        docker login --username=cloverzrg -p "$password"

        # docker run --privileged --rm tonistiigi/binfmt --install arm64,amd64,386

        echo "[STEP] Create buildx builder"
        build_node=$(docker buildx create --use)
        echo "build node: $build_node"

        echo "[STEP] Build frps (latest)"
        docker buildx build \
          --platform linux/arm64,linux/amd64,linux/386 \
          -t cloverzrg/frps-docker:latest \
          --push \
          --build-arg DRONE_TAG=${DRONE_TAG} \
          .

        echo "[STEP] Build frpc (latest)"
        docker buildx build \
          -f Dockerfile.frpc \
          --platform linux/arm64,linux/amd64,linux/386 \
          -t cloverzrg/frpc-docker:latest \
          --push \
          --build-arg DRONE_TAG=${DRONE_TAG} \
          .

        echo "[STEP] Cleanup builder"
        docker buildx rm "$build_node" || true
